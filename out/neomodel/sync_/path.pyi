from collections.abc import Iterator
from neo4j.graph import Path as Path
from neomodel.sync_.database import db as db
from neomodel.sync_.node import StructuredNode as StructuredNode
from neomodel.sync_.relationship import StructuredRel as StructuredRel

class NeomodelPath:
    def __init__(self, a_neopath: Path) -> None: ...
    def __len__(self) -> int: ...
    def __iter__(self) -> Iterator[StructuredRel]: ...
    @property
    def nodes(self) -> list[StructuredNode]: ...
    @property
    def start_node(self) -> StructuredNode: ...
    @property
    def end_node(self) -> StructuredNode: ...
    @property
    def relationships(self) -> list[StructuredRel]: ...
